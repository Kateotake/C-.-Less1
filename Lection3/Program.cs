//4 вида функций в тетради

// цикл for
// цикл в цикле

// for (int i = 2; i<= 10; i++)
// {
//     for (int j = 2; j <= 10; j++)
//     {
//         Console.WriteLine($"{i} x {j} = {i * j}");
//     }
//     Console.WriteLine( );
// }


//_______________________________________________________________________________________________

// // Дан текст, в нем заменить пробелы черточками, к на К, а С на с

// string text = "- Я думаю, - сказал князь, улыбаясь, -  что  "
//             + "ежели  бы  вас послали вместо нашего  милого Винценгероде, "
//             + "вы бы взяли приступом согласие прусского короля. "
//             + "Вы так красноречивы. Вы дадите мне чаю?";

// // string s = "qwerty"
//             // 012345
// // s[3] это r

// //Метод у нас принимает строки , символы которые нужно менять (oldV) 
// //и символы НА которые нужно менять (newV)

// // возвращать будет строку поэтому string тип данных

// string Replace (string text,char oldValue, char newValue ) //char - конкретный символ
// {
//     string result = String.Empty; // создаем "строку", которую мы будем возвращать. делаем ее пустой
    
//     int length = text.Length; 
//     for (int i = 0; i < length; i++) //прогоняем цикл от нулевого символа до конца текста
//     {
//         if (text[i] == oldValue) result = result + $"{newValue}"; //если текущий символ text[i] совпал с тем символом, который мы хотим заменить, 
//         //то мы должны его заменить на новое значенеи "весь текст + новый символ"
//         else result  = result + $"{text[i]}"; //если нет, то добавляем текущий символ который и был
//     }


//     return result; //возвращаем строку (текст в данном случае)
// }
// string newText = Replace (text, ' ', '_'); //все пробелы ( ) заменили на черточки (|)
// Console.WriteLine(newText);
// Console.WriteLine();
// newText = Replace (newText, 'к','К');
// Console.WriteLine(newText);




//________________________________________________________________________________________

// Отсортировать массив

int[] arr = {1, 5, 4, 3, 2, 6, 7, 1, 1 };

//1й способ - метод чтобы вывести массив на экран
void PrintArray (int[] array)
{
    int count = array.Length; // количество элементов массива

    for (int i = 0; i < count; i++) // проходим по всем элементам массива и показываем на экране
    {
        Console.Write($"{array[i]} ");
    }
    Console.WriteLine();

} 

//Пишем метод который будет упоряд наш массив
void Selection(int[] array) //в качестве аргумента приходит массив
{
    for (int i = 0; i < array.Length - 1; i++) //отнимаем единичку потому что поиск будет вестись с позиции i+1 
    {
        int minPos = i; //переменная ПОЗИЦИИ на которой находится минимальный элемент, присваиваем ПОЗИЦИЮ i(0, 1,2 и тд)

        for (int j = i + 1; j < array.Length; j++) // цикл ищет с нового значения позиции j - она всегда больше i на единицу
        {
            if (array[j] < array[minPos]) 
            {
                minPos = j; // меняем местами 
            }

        }

        int temp = array[i];
        array[i] = array[minPos];
        array[minPos] = temp;
    }
}


PrintArray(arr);
Selection(arr);

PrintArray(arr);

